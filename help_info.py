import telebot
from telebot import types
import json
import logging

logger = logging.getLogger(__name__)

class HelpInfoModule:
    def __init__(self, bot, db_path):
        self.bot = bot
        self.db_path = db_path
        self.user_messages = {}
        # These would need to be passed from the main bot
        self.FISH_RARITY_WEIGHTS = None
        self.RARITY_NAMES_RU = None
        self.FISHING_COOLDOWN = None
        self.CURRENCY_NAME = None
    
    def get_fish_drop_chances(self):
        """–ü–æ–ª—É—á–∏—Ç—å —à–∞–Ω—Å—ã –≤—ã–ø–∞–¥–µ–Ω–∏—è —Ä—ã–±—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏"""
        if not self.FISH_RARITY_WEIGHTS:
            return {}
            
        rarity_info = self.FISH_RARITY_WEIGHTS
        total_weight = sum(rarity_info.values())
        chances = {}
        
        for rarity, weight in rarity_info.items():
            chance = (weight / total_weight) * 100
            chances[rarity] = {
                'weight': weight,
                'chance': chance
            }
        
        return chances

    def info_command(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /info - –ø–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
        chat_id = message.chat.id
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–¥–∫–æ—Å—Ç–∏ —Ä—ã–±—ã –∏ —à–∞–Ω—Å–∞—Ö –≤—ã–ø–∞–¥–µ–Ω–∏—è
        rarity_info = self.get_fish_drop_chances()
        
        message_text = "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä—ã–±–∞–ª–∫–∏</b>\n\n"
        message_text += "<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        message_text += "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        message_text += "/link - –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n"
        message_text += "/fish - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–π–º–∞–Ω–Ω—É—é —Ä—ã–±—É\n"
        message_text += "/catch - –ü–æ–π–º–∞—Ç—å —Ä—ã–±—É (—Ä–∞–∑ –≤ —á–∞—Å)\n"
        message_text += "/duplicates - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏ —Ä—ã–±—ã\n"
        message_text += "/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
        message_text += "/info - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        
        if rarity_info:
            message_text += "<b>–®–∞–Ω—Å—ã –≤—ã–ø–∞–¥–µ–Ω–∏—è —Ä—ã–±—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:</b>\n"
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é —à–∞–Ω—Å–æ–≤
            sorted_rarities = sorted(rarity_info.items(), key=lambda x: x[1]['chance'], reverse=True)
            for rarity, data in sorted_rarities:
                chance = data['chance']
                rarity_name = self.RARITY_NAMES_RU.get(rarity, rarity) if self.RARITY_NAMES_RU else rarity
                message_text += f"{rarity_name}: {chance:.3f}% (–≤–µ—Å: {data['weight']})\n"
        
        if self.FISHING_COOLDOWN:
            message_text += f"\n<b>–ö—É–ª–¥–∞—É–Ω:</b>\n"
            message_text += f"–ú–µ–∂–¥—É –ª–æ–≤–ª–µ–π —Ä—ã–±—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ {self.FISHING_COOLDOWN//3600} —á–∞—Å (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö: {self.FISHING_COOLDOWN})\n\n"
        
        if self.CURRENCY_NAME:
            message_text += "<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b>\n"
            message_text += f"‚Ä¢ –†—ã–±–∞ –ø—Ä–æ–¥–∞–µ—Ç—Å—è –ø–æ –Ω–æ–º–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ {self.CURRENCY_NAME}\n"
            message_text += "‚Ä¢ –î—É–±–ª–∏–∫–∞—Ç—ã –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –≤—Å–µ —Å—Ä–∞–∑—É\n"
            message_text += f"‚Ä¢ –ë–∞–ª–∞–Ω—Å –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ {self.CURRENCY_NAME} (Lonely Coins)\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard = types.InlineKeyboardMarkup()
        back_button = types.InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
            callback_data="main_menu"
        )
        keyboard.add(back_button)
        
        try:
            sent_message = self.bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
            self.user_messages[chat_id] = sent_message.message_id
        except:
            pass

    def help_command(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞"""
        chat_id = message.chat.id
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞ –∏–∑ JSON —Ñ–∞–π–ª–∞
            with open('bot_functionality.json', 'r', encoding='utf-8') as f:
                bot_info = json.load(f)
            
            message_text = f"üìñ <b>{bot_info['bot_name']}</b>\n\n"
            message_text += f"{bot_info['description']}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
            for section_key, section_data in bot_info['sections'].items():
                message_text += f"<b>{section_data['title']}</b>\n"
                message_text += f"{section_data['description']}\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ
                for feature in section_data['features']:
                    if 'command' in feature:
                        message_text += f"‚Ä¢ <code>{feature['command']}</code> - {feature['description']}\n"
                    elif 'commands' in feature:
                        commands_str = ', '.join([f"<code>{cmd}</code>" for cmd in feature['commands']])
                        message_text += f"‚Ä¢ {commands_str} - {feature['description']}\n"
                    else:
                        message_text += f"‚Ä¢ {feature['description']}\n"
                message_text += "\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            message_text += "<b>üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
            for cooldown_name, cooldown_value in bot_info['technical_info']['cooldowns'].items():
                message_text += f"‚Ä¢ {cooldown_name}: {cooldown_value}\n"
            
            message_text += f"\nüí∞ –í–∞–ª—é—Ç–∞: {bot_info['technical_info']['currency']}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
            keyboard = types.InlineKeyboardMarkup()
            back_button = types.InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
                callback_data="main_menu"
            )
            keyboard.add(back_button)
            
            try:
                sent_message = self.bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
                self.user_messages[chat_id] = sent_message.message_id
            except:
                pass
                
        except FileNotFoundError:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = "‚ùå –§–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω."
            try:
                sent_message = self.bot.send_message(message.chat.id, message_text)
                self.user_messages[chat_id] = sent_message.message_id
            except:
                pass
        except json.JSONDecodeError:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            message_text = "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞."
            try:
                sent_message = self.bot.send_message(message.chat.id, message_text)
                self.user_messages[chat_id] = sent_message.message_id
            except:
                pass
        except Exception as e:
            # –ü—Ä–∏ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–∫–∞—Ö —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message_text = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞."
            try:
                sent_message = self.bot.send_message(message.chat.id, message_text)
                self.user_messages[chat_id] = sent_message.message_id
            except:
                pass
    
    def handle_callback_query(self, call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback query –¥–ª—è –º–æ–¥—É–ª—è –ø–æ–º–æ—â–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        chat_id = call.message.chat.id
        data = call.data
        
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
            self.bot.answer_callback_query(call.id)
        except:
            pass
            
        if data == "view_info":
            # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
            logger.info("User %s navigated to view info", chat_id)
            self.info_command(call.message)
            return True
            
        elif data == "view_help":
            # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–º–æ—â–∏
            logger.info("User %s navigated to view help", chat_id)
            self.help_command(call.message)
            return True
            
        return False  # –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç—Ç–∏–º –º–æ–¥—É–ª–µ–º