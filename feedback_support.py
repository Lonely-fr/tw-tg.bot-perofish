import telebot
from telebot import types
import sqlite3
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class FeedbackSupportModule:
    def __init__(self, bot, db_path):
        self.bot = bot
        self.db_path = db_path
        self.awaiting_feedback = set()
        self.user_messages = {}
    
    def contact_lonely(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤—è–∑–∏ —Å –õ–æ–Ω–ª–∏"""
        chat_id = message.chat.id
        
        message_text = "‚úâÔ∏è <b>–°–≤—è–∑—å —Å –õ–æ–Ω–ª–∏</b>\n\n"
        message_text += "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –õ–æ–Ω–ª–∏.\n"
        message_text += "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ.\n\n"
        message_text += "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        keyboard = types.InlineKeyboardMarkup()
        cancel_button = types.InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", 
            callback_data="main_menu"
        )
        keyboard.add(cancel_button)
        
        try:
            sent_message = self.bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
            self.user_messages[chat_id] = sent_message.message_id
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            self.awaiting_feedback.add(chat_id)
        except:
            pass
    
    def support_lonely(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –õ–æ–Ω–ª–∏"""
        chat_id = message.chat.id
        
        message_text = "üíñ <b>–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –õ–æ–Ω–ª–∏</b>\n\n"
        message_text += "–ï—Å–ª–∏ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ—Ç –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –õ–æ–Ω–ª–∏, –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–¥–Ω—É –∏–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º:\n\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–Ω–∞—Ç–æ–≤
        keyboard = types.InlineKeyboardMarkup()
        
        yoomoney_button = types.InlineKeyboardButton(
            text="–ÆMoney", 
            url="https://yoomoney.ru/fundraise/1CI4P0D5VGR.250903"
        )
        
        donationalerts_button = types.InlineKeyboardButton(
            text="DonationAlerts", 
            url="https://www.donationalerts.com/r/lonely_friend"
        )
        
        menu_button = types.InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
            callback_data="main_menu"
        )
        
        keyboard.add(yoomoney_button)
        keyboard.add(donationalerts_button)
        keyboard.add(menu_button)
        
        try:
            sent_message = self.bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
            self.user_messages[chat_id] = sent_message.message_id
        except:
            pass
    
    def process_feedback(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        if chat_id not in self.awaiting_feedback:
            return
            
        try:
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è
            self.awaiting_feedback.remove(chat_id)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            feedback_text = message.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
            if not feedback_text.strip():
                error_text = "‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –õ–æ–Ω–ª–∏."
                self.bot.send_message(chat_id, error_text)
                return
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            self._save_feedback_message(chat_id, feedback_text)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            confirmation_text = "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –õ–æ–Ω–ª–∏.\n–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!"
            self.bot.send_message(chat_id, confirmation_text)
            
        except Exception as e:
            logger.error("Error processing feedback from user %s: %s", chat_id, str(e))
            self.bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
    
    def _save_feedback_message(self, chat_id, message_text):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        with sqlite3.connect(self.db_path) as conn:
            cursor = conn.cursor()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS feedback_messages (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    chat_id INTEGER NOT NULL,
                    message TEXT NOT NULL,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            cursor.execute("""
                INSERT INTO feedback_messages (chat_id, message)
                VALUES (?, ?)
            """, (chat_id, message_text))
            
            conn.commit()
    
    def init_db(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞"""
        with sqlite3.connect(self.db_path) as conn:
            cursor = conn.cursor()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS feedback_messages (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    chat_id INTEGER NOT NULL,
                    message TEXT NOT NULL,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            
            conn.commit()
    
    def handle_callback_query(self, call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback query –¥–ª—è –º–æ–¥—É–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        chat_id = call.message.chat.id
        data = call.data
        
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
            self.bot.answer_callback_query(call.id)
        except:
            pass
            
        if data == "contact_lonely":
            # –°–≤—è–∑—å —Å –õ–æ–Ω–ª–∏
            logger.info("User %s navigated to contact lonely", chat_id)
            self.contact_lonely(call.message)
            return True
            
        elif data == "support_lonely":
            # –î–æ–Ω–∞—Ç –õ–æ–Ω–ª–∏
            logger.info("User %s navigated to support lonely", chat_id)
            self.support_lonely(call.message)
            return True
            
        return False  # –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç—Ç–∏–º –º–æ–¥—É–ª–µ–º